#include <bits/stdc++.h>
using namespace std;

struct Rect {
	int h, p;
};
#define MAXH 1400
#define MAXW 1400
int H, W;
int c[MAXH][MAXW];
int T[MAXH][MAXW + 1];

int main() {
	cin >> H >> W;
	for (int i = 0; i < H; i++) {
		for (int j = 0; j < W; j++) {
			cin >> c[i][j];
		}
	}
	for (int j = 0; j < W; j++) {
		T[0][j] = (c[0][j] + 1) % 2;
	}
	T[0][W] = 0;
	for (int i = 1; i < H; i++) {
		for (int j = 0; j < W; j++) {
			if (c[i][j] == 0) {
				T[i][j] = T[i - 1][j] + 1;
			} else if (c[i][j] == 1) {
				T[i][j] = 0;
			}
		}
		T[i][W] = 0;
	}
	int ans = 0;
	for (int i = 0; i < H; i++) {
		stack<Rect> S;
		for (int j = 0; j < W + 1; j++) {
			Rect r = { T[i][j], j };
			if (S.empty()) {
				S.push(r);
			} else if (S.top().h < r.h) {
				S.push(r);
			} else if (S.top().h == r.h) {
				// DO NOTHING
			} else if (S.top().h > r.h) {
				int tgt = j;
				while (!S.empty() && S.top().h >= r.h) {
					Rect pre = S.top();
					S.pop();
					ans = max(ans, (j - pre.p) * pre.h);
					tgt = pre.p;
				}
				r.p = tgt;
				S.push(r);
			}
		}
	}
	cout << ans << endl;
	return 0;
}
