#include <bits/stdc++.h>
using namespace std;

struct card {
	char s, n;
};

void printarray(card C[], int len) {
	for (int i = 0; i < len - 1; i++) {
		cout << C[i].s << C[i].n << " ";
	}
	cout << C[len - 1].s << C[len - 1].n << endl;
}

int main() {
	int N;
	cin >> N;
	card CB[N], CS[N];
	for (int i = 0; i < N; i++) {
		cin >> CB[i].s >> CB[i].n;
		CS[i].s = CB[i].s;
		CS[i].n = CB[i].n;
	}

	for (int i = 0; i < N; i++) {
		for (int j = N - 1; j > i; j--) {
			if (CB[j].n < CB[j - 1].n) {
				swap(CB[j], CB[j - 1]);
			}
		}
	}
	for (int i = 0; i < N; i++) {
		int minj = i;
		for (int j = i + 1; j < N; j++) {
			if (CS[minj].n > CS[j].n) {
				minj = j;
			}
		}
		swap(CS[i], CS[minj]);
	}
	printarray(CB, N);
	cout << "Stable" << endl;
	printarray(CS, N);
	for (int i = 0; i < N; i++) {
		if (CB[i].s != CS[i].s) {
			cout << "Not stable" << endl;
			return 0;
		}
	}
	cout << "Stable" << endl;
	return 0;

}
