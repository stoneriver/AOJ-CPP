#include <bits/stdc++.h>
using namespace std;

#define NIL -1

struct node {
	int p, l, r;
};
node T[25];

void preparse(int u) {
	if (u == NIL)
		return;
	cout << " " << u;
	preparse(T[u].l);
	preparse(T[u].r);
}

void inparse(int u) {
	if (u == NIL)
		return;
	inparse(T[u].l);
	cout << " " << u;
	inparse(T[u].r);
}

void postparse(int u) {
	if (u == NIL)
		return;
	postparse(T[u].l);
	postparse(T[u].r);
	cout << " " << u;
}

void initnode(int n) {
	for (int i = 0; i < n; i++)
		T[i] = { NIL, NIL, NIL };
}

void regnode(int id, int l, int r) {
	T[id].l = l;
	T[l].p = id;
	T[id].r = r;
	T[r].p = id;
}

int main() {
	int n;
	cin >> n;
	initnode(n);
	for (int i = 0; i < n; i++) {
		int id, l, r;
		cin >> id >> l >> r;
		regnode(id, l, r);
	}
	int r;
	for (int i = 0;; i++)
		if (T[i].p == NIL) {
			r = i;
			break;
		}
	cout << "Preorder" << endl;
	preparse(r);
	cout << endl << "Inorder" << endl;
	inparse(r);
	cout << endl << "Postorder" << endl;
	postparse(r);
	cout << endl;
	return 0;
}
